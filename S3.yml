
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for s3 bucket configuration

Parameters:
  S3BucketName:
    Description: Enter S3 Bucket Name 
    Type: String

  VersioningConfiguration: 
    Type: String
    Description: Status Of Versioning
    AllowedValues:
      - Enabled
      - Suspended
    Default: Enabled

  #objectlockconfiguration:
   # Type: String
    #Description: 
    #AllowedValues:
     # - Enabled
      #- Disabled
    #Default: Enabled

  Accesscontrol:
    Type: String
    AllowedValues:
      - Public
      - private
    Default: Private 

  blockpublicAcls:
    Type: String
    Description: Block Public ACLS
    AllowedValues:
      - true
      - false
    Default: true

  blockpublicpolicy:
    Type: String
    Description: Block Public Policy
    AllowedValues:
      - true
      - false
    Default: true

  ignorepubliccAcls:
    Type: String
    Description: Block Public ACLS
    AllowedValues:
      - true
      - false
    Default: true

  restrictpublicbuckets:
    Type: String
    Description: Block Public ACLS
    AllowedValues:
      - true
      - false
    Default: true

  ownershipcontrols:
        Rules:
          - ObjectOwnership: BucketOwnerenforced  

Resources:
  S3Bucket:
    #DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketName
      VersioningConfiguration:
        Status: !Ref VersioningConfiguration
      
      ObjectLockEnabled: true
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention: 
            Mode: Goverance
            Days: 1
        
      AccessControl: !Ref Accesscontrol

      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

      LifecycleConfiguration:
        Rules:
          - Id: GlacierRule
            #Prefix: glacier
            Status: Enabled
            ExpirationInDays: 365
            Transitions:
              - TransitionInDays: 1
                StorageClass: GLACIER
                
      PublicAccessBlockConfiguration:
        BlockPublicAcls: !Ref blockpublicAcls
        BlockPublicPolicy: !Ref blockpublicpolicy
        IgnorePublicAcls: !Ref ignorepublicAcls
        RestrictPublicBuckets: !Ref restrictpublicbuckets 

      S3EncryptionKey:
        Type: AWS::KMS::Key 
        Properties:
          Description: An example symmetric encryption KMS key
          EnableKeyRotation: true
          PendingWindowInDays: 2
        KeyPolicy:
          Version: 2012-10-17
          Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
            AWS: 'arn:aws:iam::111122223333:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
            AWS: 'arn:aws:iam::111122223333:user/Alice'
            Action:
            - 'kms:Create*'
            - 'kms:Describe*'
            - 'kms:Enable*'
            - 'kms:List*'
            - 'kms:Put*'
            - 'kms:Update*'
            - 'kms:Revoke*'
            - 'kms:Disable*'
            - 'kms:Get*'
            - 'kms:Delete*'
            - 'kms:ScheduleKeyDeletion'
            - 'kms:CancelKeyDeletion'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
            AWS: 'arn:aws:iam::111122223333:user/Bob'
            Action:
            - 'kms:DescribeKey'
            - 'kms:Encrypt'
            - 'kms:Decrypt'
            - 'kms:ReEncrypt*'
            - 'kms:GenerateDataKey'
            - 'kms:GenerateDataKeyWithoutPlaintext'
            Resource: '*'

      OwnerShipControls: !Ref ownershipcontrols
        
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref S3EncryptionKey
              SSEAlgorithm: 'aws:kms'
      
      Tags:
        - Key: Name
          Value: Dev
      
Outputs:
  BucketName: 
    Value: !Ref S3BucketName

  WebsiteURL:
    Value: !GetAtt 
      - S3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3

  S3BucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt [S3Bucket, DomainName]]]
    Description: Name of AWS S3 bucket to hold website content



      




        








